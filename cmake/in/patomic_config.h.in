#ifndef PATOMIC_CONFIG_H
#define PATOMIC_CONFIG_H


/* 'long long' is a fundamental type */
#ifndef PATOMIC_HAVE_LONG_LONG
    #define PATOMIC_HAVE_LONG_LONG @COMPILER_HAS_LONG_LONG@
#endif

/* '__forceinline' keyword is available */
#ifndef PATOMIC_HAVE_FORCEINLINE
    #define PATOMIC_HAVE_FORCEINLINE @COMPILER_HAS_FORCEINLINE@
#endif

/* '__attribute__((always_inline))' is available to use without 'inline' */
#ifndef PATOMIC_HAVE_ALWAYS_INLINE_ATTR
    #define PATOMIC_HAVE_ALWAYS_INLINE_ATTR @COMPILER_HAS_ALWAYS_INLINE_ATTR@
#endif

/* 'inline __attribute__((always_inline))' is available */
#ifndef PATOMIC_HAVE_INLINE_ALWAYS_INLINE_ATTR
    #define PATOMIC_HAVE_INLINE_ALWAYS_INLINE_ATTR @COMPILER_HAS_INLINE_ALWAYS_INLINE_ATTR@
#endif

/* '_Alignof' and '_Alignas' keywords are available */
#ifndef PATOMIC_HAVE_ALIGNOF
    #define PATOMIC_HAVE_ALIGNOF @COMPILER_HAS_ALIGNOF@
#endif

/* <stdatomic.h> is header and '_Atomic' keyword are available */
#ifndef PATOMIC_HAVE_STD_ATOMIC
    #define PATOMIC_HAVE_STD_ATOMIC @COMPILER_HAS_STD_ATOMIC@
#endif

/* <memoryapi.h> is header available and provides Virtual functions */
#ifndef PATOMIC_HAVE_WIN32_MEMORYAPI_VIRTUAL
    #define PATOMIC_HAVE_WIN32_MEMORYAPI_VIRTUAL @COMPILER_HAS_WIN32_MEMORYAPI_VIRTUAL@
#endif

/* <sys/mman.h> is header available and provides 'm(un)map' and 'mprotect' */
#ifndef PATOMIC_HAVE_SYS_MMAN_MMAP_MPROTECT
    #define PATOMIC_HAVE_SYS_MMAN_MMAP_MPROTECT @COMPILER_HAS_SYS_MMAN_MMAP_MPROTECT@
#endif

/* __attribute__((sysv_abi)) is available */
#ifndef PATOMIC_HAVE_SYSV_ABI_ATTR
    #define PATOMIC_HAVE_SYSV_ABI_ATTR @COMPILER_HAS_SYSV_ABI_ATTR@
#endif


#endif  /* !PATOMIC_CONFIG_H */
