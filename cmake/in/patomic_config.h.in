#ifndef PATOMIC_CONFIG_H
#define PATOMIC_CONFIG_H


/* sizeof(char) */
#ifndef PATOMIC_SIZEOF_CHAR
    #define PATOMIC_SIZEOF_CHAR @COMPILER_SIZEOF_CHAR@
#endif

/* sizeof(short) */
#ifndef PATOMIC_SIZEOF_SHORT
    #define PATOMIC_SIZEOF_SHORT @COMPILER_SIZEOF_SHORT@
#endif

/* sizeof(int) */
#ifndef PATOMIC_SIZEOF_INT
    #define PATOMIC_SIZEOF_INT @COMPILER_SIZEOF_INT@
#endif

/* sizeof(long) */
#ifndef PATOMIC_SIZEOF_LONG
    #define PATOMIC_SIZEOF_LONG @COMPILER_SIZEOF_LONG@
#endif

/* sizeof(long long) OR sizeof(__extension__ long long) OR 0 */
#ifndef PATOMIC_SIZEOF_LLONG
    #define PATOMIC_SIZEOF_LLONG @COMPILER_SIZEOF_LLONG@
#endif

/* sizeof(__int128) OR sizeof(__extension__ __int128) OR 0 */
#ifndef PATOMIC_SIZEOF_I128
    #define PATOMIC_SIZEOF_I128 @COMPILER_SIZEOF_I128@
#endif

/* 'long long' is a fundamental type */
#ifndef PATOMIC_HAVE_LONG_LONG
    #define PATOMIC_HAVE_LONG_LONG @COMPILER_HAS_LONG_LONG@
#endif

/* '__extension__ long long' is available as a type */
#ifndef PATOMIC_HAVE_LONG_LONG_EXTN
    #define PATOMIC_HAVE_LONG_LONG_EXTN @COMPILER_HAS_LONG_LONG_EXTN@
#endif

/* '__int128' is available as a type */
#ifndef PATOMIC_HAVE_MS_INT128
    #define PATOMIC_HAVE_MS_INT128 @COMPILER_HAS_MS_INT128@
#endif

/* '__extension__ __int128' is available as a type */
#ifndef PATOMIC_HAVE_MS_INT128_EXTN
    #define PATOMIC_HAVE_MS_INT128_EXTN @COMPILER_HAS_MS_INT128_EXTN@
#endif

/* '__func__' identifier is available */
#ifndef PATOMIC_HAVE_FUNC
    #define PATOMIC_HAVE_FUNC @COMPILER_HAS_FUNC@
#endif

/* '__FUNCTION__' identifier or macro is available */
#ifndef PATOMIC_HAVE_GNU_FUNCTION
    #define PATOMIC_HAVE_GNU_FUNCTION @COMPILER_HAS_GNU_FUNCTION@
#endif

/* '__extension__ __FUNCTION__' identifier is available */
#ifndef PATOMIC_HAVE_GNU_FUNCTION_EXTN
    #define PATOMIC_HAVE_GNU_FUNCTION_EXTN @COMPILER_HAS_GNU_FUNCTION_EXTN@
#endif

/* '__PRETTY_FUNCTION__' identifier is available */
#ifndef PATOMIC_HAVE_GNU_PRETTY_FUNCTION
    #define PATOMIC_HAVE_GNU_PRETTY_FUNCTION @COMPILER_HAS_GNU_PRETTY_FUNCTION@
#endif

/* '__extension__ __PRETTY_FUNCTION__' identifier is available */
#ifndef PATOMIC_HAVE_GNU_PRETTY_FUNCTION_EXTN
    #define PATOMIC_HAVE_GNU_PRETTY_FUNCTION_EXTN @COMPILER_HAS_GNU_PRETTY_FUNCTION_EXTN@
#endif

/* '__forceinline' keyword is available */
#ifndef PATOMIC_HAVE_MS_FORCEINLINE
    #define PATOMIC_HAVE_MS_FORCEINLINE @COMPILER_HAS_MS_FORCEINLINE@
#endif

/* '__attribute__((always_inline))' is available to use without 'inline' */
#ifndef PATOMIC_HAVE_ALWAYS_INLINE_ATTR
    #define PATOMIC_HAVE_ALWAYS_INLINE_ATTR @COMPILER_HAS_ALWAYS_INLINE_ATTR@
#endif

/* 'inline __attribute__((always_inline))' is available */
#ifndef PATOMIC_HAVE_INLINE_ALWAYS_INLINE_ATTR
    #define PATOMIC_HAVE_INLINE_ALWAYS_INLINE_ATTR @COMPILER_HAS_INLINE_ALWAYS_INLINE_ATTR@
#endif

/* '__inline__ __attribute__((always_inline))' is available */
#ifndef PATOMIC_HAVE_GNU_INLINE_ALWAYS_INLINE_ATTR
    #define PATOMIC_HAVE_GNU_INLINE_ALWAYS_INLINE_ATTR @COMPILER_HAS_GNU_INLINE_ALWAYS_INLINE_ATTR@
#endif

/* '__attribute__((noinline))' is available */
#ifndef PATOMIC_HAVE_NOINLINE_ATTR
    #define PATOMIC_HAVE_NOINLINE_ATTR @COMPILER_HAS_NOINLINE_ATTR@
#endif

/* '__declspec(noinline)' is available */
#ifndef PATOMIC_HAVE_NOINLINE_DSPC
    #define PATOMIC_HAVE_NOINLINE_DSPC @COMPILER_HAS_NOINLINE_DSPC@
#endif

/* '_Noreturn' keyword is available */
#ifndef PATOMIC_HAVE_NORETURN
    #define PATOMIC_HAVE_NORETURN @COMPILER_HAS_NORETURN@
#endif

/* '__declspec(noreturn)' is available */
#ifndef PATOMIC_HAVE_NORETURN_DSPC
    #define PATOMIC_HAVE_NORETURN_DSPC @COMPILER_HAS_NORETURN_DSPC@
#endif

/* '__attribute__((noreturn))' is available */
#ifndef PATOMIC_HAVE_NORETURN_ATTR
    #define PATOMIC_HAVE_NORETURN_ATTR @COMPILER_HAS_NORETURN_ATTR@
#endif

/* 'restrict' keyword is available */
#ifndef PATOMIC_HAVE_RESTRICT
    #define PATOMIC_HAVE_RESTRICT @COMPILER_HAS_RESTRICT@
#endif

/* '__restrict' keyword is available */
#ifndef PATOMIC_HAVE_MS_RESTRICT
    #define PATOMIC_HAVE_MS_RESTRICT @COMPILER_HAS_MS_RESTRICT@
#endif

/* '__restrict__' keyword is available */
#ifndef PATOMIC_HAVE_GNU_RESTRICT
    #define PATOMIC_HAVE_GNU_RESTRICT @COMPILER_HAS_GNU_RESTRICT@
#endif

/* '_Alignof' and '_Alignas' keywords are available */
#ifndef PATOMIC_HAVE_ALIGNOF
    #define PATOMIC_HAVE_ALIGNOF @COMPILER_HAS_ALIGNOF@
#endif

/* '__alignof' keyword and '__declspec(align(#))' are available */
#ifndef PATOMIC_HAVE_MS_ALIGNOF_ALIGN_DSPC
    #define PATOMIC_HAVE_MS_ALIGNOF_ALIGN_DSPC @COMPILER_HAS_MS_ALIGNOF_ALIGN_DSPC@
#endif

/* '__alignof__' keyword and '__attribute__((aligned(#)))' are available */
#ifndef PATOMIC_HAVE_GNU_ALIGNOF_ALIGNED_ATTR
    #define PATOMIC_HAVE_GNU_ALIGNOF_ALIGNED_ATTR @COMPILER_HAS_GNU_ALIGNOF_ALIGNED_ATTR@
#endif

/* '__assume(int)' is available */
#ifndef PATOMIC_HAVE_MS_ASSUME
    #define PATOMIC_HAVE_MS_ASSUME @COMPILER_HAS_MS_ASSUME@
#endif

/* '__builtin_unreachable(void)' is available */
#ifndef PATOMIC_HAVE_BUILTIN_UNREACHABLE
    #define PATOMIC_HAVE_BUILTIN_UNREACHABLE @COMPILER_HAS_BUILTIN_UNREACHABLE@
#endif

/* '__builtin_expect(long, long)' is available */
#ifndef PATOMIC_HAVE_BUILTIN_EXPECT
    #define PATOMIC_HAVE_BUILTIN_EXPECT @COMPILER_HAS_BUILTIN_EXPECT@
#endif

/* <stdint.h> header available and 'uintptr_t' available in <stdint.h> */
#ifndef PATOMIC_HAVE_STD_INT_UINTPTR
    #define PATOMIC_HAVE_STD_INT_UINTPTR @COMPILER_HAS_STD_INT_UINTPTR@
#endif

/* 'uintptr_t' available in <stddef.h> */
#ifndef PATOMIC_HAVE_STD_DEF_UINTPTR
    #define PATOMIC_HAVE_STD_DEF_UINTPTR @COMPILER_HAS_STD_DEF_UINTPTR@
#endif

/* <stdatomic.h> header and '_Atomic' keyword are available */
#ifndef PATOMIC_HAVE_STD_ATOMIC
    #define PATOMIC_HAVE_STD_ATOMIC @COMPILER_HAS_STD_ATOMIC@
#endif

/* '__sync' builtins are available */
#ifndef PATOMIC_HAVE_GNU_SYNC
    #define PATOMIC_HAVE_GNU_SYNC @COMPILER_HAS_GNU_SYNC@
#endif

/* '__atomic' builtins and '__ATOMIC' constants are available */
#ifndef PATOMIC_HAVE_GNU_ATOMIC
    #define PATOMIC_HAVE_GNU_ATOMIC @COMPILER_HAS_GNU_ATOMIC@
#endif

/* <intrin.h> header and '__cpuid(ex)' and '__(read|write)eflags intrinsics are available */
#ifndef PATOMIC_HAVE_INTRIN_EFLAGS_CPUID
    #define PATOMIC_HAVE_INTRIN_EFLAGS_CPUID @COMPILER_HAS_INTRIN_EFLAGS_CPUID@
#endif

/* <cpuid.h> header and  '__cpuid(_count)' and '__get_cpuid_max' intrinsics are available */
#ifndef PATOMIC_HAVE_CPUID_CPUID
    #define PATOMIC_HAVE_CPUID_CPUID @COMPILER_HAS_CPUID_CPUID@
#endif


#endif  /* !PATOMIC_CONFIG_H */
