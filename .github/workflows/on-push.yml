name: on-push


on:
  push:


jobs:
  build-run-test:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    env:
      CC: ${{ matrix.config.cc }}
      CCX: ${{ matrix.config.ccx }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: "windows-msvc-x86"
            os: windows-latest
            cc: cl
            ccx: cl
            preset: "ci-win32-msvc"
            output-dir: "build/test/Debug"

          - name: "windows-msvc-x64"
            os: windows-latest
            cc: cl
            ccx: cl
            preset: "ci-win64-msvc"
            output-dir: "build/test/Debug"

          - name: "ubuntu-gcc-x64"
            os: ubuntu-latest
            cc: gcc
            ccx: g++
            preset: "ci-ubuntu-gcc"
            output-dir: "build/test"

          - name: "ubuntu-clang-x64"
            os: ubuntu-latest
            cc: clang
            ccx: clang++
            preset: "ci-ubuntu-clang"
            output-dir: "build/test"

          - name: "macos-clang-x64"
            os: macos-latest
            cc: clang
            ccx: clang++
            preset: "ci-macos-clang"
            output-dir: "build/test"

    steps:
      - uses: actions/checkout@v2
      - name: build-ansi
        if: ${{ !startsWith(matrix.config.os, 'windows') }}
        run: |
          cmake --preset=ci-unix-ansi
          cmake --build build
          rm -rf build

      - name: build-test
        shell: bash
        run: |
          cmake --preset=${{ matrix.config.preset }}
          if [ ${{ startsWith(matrix.config.os, 'windows') }} ]
          then
              cmake --build build --config Debug
          else
              cmake --build build
          fi

      - name: run-test
        shell: bash
        run: |
          if [ ${{ startsWith(matrix.config.os, 'windows') }} ]
          then
              export PATH=$PATH:$PWD/build/Debug:$PWD/build/bin/Debug
          fi
          cd ${{ matrix.config.output-dir }}
          ./patomic_test --gtest_output=xml:output.xml

      - name: upload-xml
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.config.name }}.xml
          path: ${{ matrix.config.output-dir }}/output.xml